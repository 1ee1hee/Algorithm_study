def solution(n):
    answer = 0
    
    for num in range(2, n + 1): #1은 소수가 아니니까 2부터 n까지의 num이 소수인지 알아보기
        is_devided = False #중첩 for문이라 필요한 변수
        for i in range(2, int(num ** 0.5) + 1): #num을 i로 나눠보기 (2부터 루트num까지)
            if num % i == 0: #i로 나눠지면
                is_devided = True #소수가 아님
                break
        if not is_devided: #모든 i에 대해 안 나눠졌으면
            answer += 1 #소수가 맞음
            
    return answer

print(solution(10)) #4
print(solution(5)) #3

"""
2부터 n까지의 수(=num) 중에서 소수가 몇 개인지 찾아본다.

소수는 1과 자기 자신 외에 나눠지는 숫자가 없어야 한다.
즉, num이 소수인지 아닌지 알아보기 위해서는
num을 2, 3, 4, ... , 루트num으로 모두 나눠보면 된다.
(왜 루트n인가? ===> 약수 구할 때 36 = 6*6 의 예시를 생각해 보면 좋음)

이때 나눠지는 경우가 생기면(=나머지가 0이면) 소수가 아닌 게 확실해지므로
그 자리에서 해당 for문을 break하고 다음 num으로 넘어간다.

break 안 되고 끝까지 왔다면 소수가 맞으므로 answer을 하나 올린다.
"""
